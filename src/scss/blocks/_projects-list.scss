.projects-list {
	color: $gray-light;

	// .projects-list__header
	&__header {
		margin-bottom: 46px;

		div {
			@extend %h3-heading;
		}
	}
}

.block-projects {
	display: grid;
	gap: 16px;
	margin-bottom: 38px;

	@include respond-to(md) {
		grid-template-columns: repeat(4, 1fr);
		// grid-template-rows: repeat(12, 1fr); // чтобы не было пустого места от скрытого 6го проекта
		grid-template-rows: repeat(11, 1fr);
	}

	@include respond-to(lg) {
		grid-template-columns: repeat(6, 1fr);
		grid-template-rows: repeat(6, 1fr);
	}
}

@include respond-to(md) {
	.grid-project-1 {
		grid-area: 1 / 1 / 4 / 3;
	}
	.grid-project-2 {
		grid-area: 1 / 3 / 6 / 5;
	}
	.grid-project-3 {
		grid-area: 4 / 1 / 8 / 3;
	}
	.grid-project-4 {
		grid-area: 8 / 1 / 11 / 3;
	}
	.grid-project-5 {
		grid-area: 6 / 3 / 11 / 5;
	}
	.grid-project-6 {
		grid-area: 11 / 1 / 13 / 5;
	}
}

@include respond-to(lg) {
	.grid-project-1 {
		grid-area: 1 / 1 / 3 / 3;
	}
	.grid-project-2 {
		grid-area: 1 / 3 / 3 / 7;
	}
	.grid-project-3 {
		grid-area: 3 / 1 / 5 / 3;
	}
	.grid-project-4 {
		grid-area: 3 / 3 / 5 / 5;
	}
	.grid-project-5 {
		grid-area: 5 / 1 / 7 / 5;
	}
	.grid-project-6 {
		grid-area: 3 / 5 / 7 / 7;
	}
}

:root {
	--project-link: 148px;
}

.project {
	position: relative;
	display: flex;
	flex-direction: column;
	justify-content: flex-end;

	@include respond-to(md) {
		height: 100%;
		min-height: 244px;
	}

	@include respond-to(lg) {
		min-height: 480px;
	}

	@include when-inside(".grid-project-6") {
		@include respond-to(md) {
			display: none;
		}

		@include respond-to(lg) {
			display: flex;
		}
	}

	picture,
	img {
		border-radius: 2px;
		background: $gray;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		width: 100%;
		height: 100%;
		max-width: none;
		object-fit: cover;

		@include respond-to(md) {
			position: absolute;
		}
	}

	@include when-inside("body:not(.is-touch)") {
		@include on-hover {
			.project__info {
				opacity: 1;
			}

			&._shadow {
				&::before {
					opacity: 1;
				}
			}
		}
	}

	// .project__info
	&__info {
		position: absolute;
		color: $white;
		z-index: 1;
		width: 100%;
		padding: 30px;
		display: flex;
		align-items: center;
		justify-content: space-between;

		@include respond-to(md) {
			position: relative;
		}

		@include when-inside("body:not(.is-touch)") {
			opacity: 0;
			transition: opacity $transition-default;
		}
	}

	// .project__info-left
	&__info-left {
		margin-right: 20px;
	}

	// .project__info-right
	&__info-right {
	}

	// .project__title
	&__title {
		font-size: rem(24);
		font-weight: 300;
		line-height: 1;
		margin-bottom: 16px;

		// @include respond-to(md) {
		// 	font-size: rem(20);
		// }
	}

	// .project__name
	&__name {
		font-size: rem(30);
		line-height: 1;
		font-weight: 700;

		// @include respond-to(md) {
		// 	font-size: rem(34);
		// }
	}

	&._shadow {
		&::before {
			content: "";
			display: block;
			position: absolute;
			z-index: 1;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			background: rgba(0, 0, 0, 0.6);

			@include when-inside("body:not(.is-touch)") {
				opacity: 0;
				transition: opacity $transition-default;
			}
		}
	}
}

.project-link {
	background: $yellow;
	font-size: rem(14);
	padding: 22px 30px;
	display: flex;
	flex-direction: column;
	justify-content: center;
	position: relative;
	text-decoration: none;
	transition: all $transition-default;
	border-radius: 2px;

	@include respond-to(md) {
		font-size: rem(20);
		padding: 11px 30px;
	}

	@include respond-to(lg) {
		height: var(--project-link);
		font-size: rem(30);
		padding: 30px;
	}

	b {
		font-size: rem(26);

		@include respond-to(md) {
			font-size: rem(30);
		}

		@include respond-to(lg) {
			font-size: rem(34);
		}
	}

	@include on-hover {
		background: $yellow-dark;

		&::after {
			right: 25px;
		}
	}

	&::after {
		content: "";
		display: block;
		position: absolute;
		right: 30px;
		margin-left: 5px;
		width: 30px;
		height: 30px;
		flex: 0 0 30px;
		background-image: $svg-arrow-black;
		background-repeat: no-repeat;
		transition: all $transition-default;
		transform: rotate(45deg);

		@include respond-to(md) {
			width: 40px;
			height: 40px;
			flex: 0 0 40px;
		}
	}
}
